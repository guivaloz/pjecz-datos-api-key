{
  "FastAPI CRUD": {
    "scope": "python",
    "prefix": "fcrud",
    "body": [
      "\"\"\"",
      "${1:Modulos} v4, CRUD (create, read, update, and delete)",
      "\"\"\"",
      "from typing import Any",
      "",
      "from sqlalchemy.orm import Session",
      "",
      "from lib.exceptions import MyIsDeletedError, MyNotExistsError",
      "",
      "from ...core.${2:plural}.models import ${3:Clase}",
      "",
      "",
      "def get_${2:plural}(",
      "\tdatabase: Session,",
      "\tfiltro_boleano: bool = None,",
      ") -> Any:",
      "\t\"\"\" Consultar los ${4:plural} activos \"\"\"",
      "\tconsulta = database.query(${3:Clase})",
      "\tif filtro_boleano is not None:",
      "\t\tconsulta = consulta.filter_by(filtro_boleano=filtro_boleano)",
      "\treturn consulta.filter_by(estatus=\"A\").order_by(${3:Clase}.id)",
      "",
      "",
      "def get_${5:singular}(database: Session, ${5:singular}_id: int) -> ${3:Clase}:",
      "\t\"\"\" Consultar un ${6:singular} por su id \"\"\"",
      "\t${5:singular} = database.query(${3:Clase}).get(${5:singular}_id)",
      "\tif ${5:singular} is None:",
      "\t\traise MyNotExistsError(\"No existe ese ${6:singular}\")",
      "\tif ${5:singular}.estatus != \"A\":",
      "\t\traise MyIsDeletedError(\"No es activo ese ${6:singular}, está eliminado\")",
      "\treturn ${5:singular}",
      ""
    ],
    "description": "Contenido para crud.py con id"
  },
  "FastAPI CRUD clave": {
    "scope": "python",
    "prefix": "fcrudclave",
    "body": [
      "\"\"\"",
      "${1:Modulos} v4, CRUD (create, read, update, and delete)",
      "\"\"\"",
      "from typing import Any",
      "",
      "from sqlalchemy.orm import Session",
      "",
      "from lib.exceptions import MyIsDeletedError, MyNotExistsError, MyNotValidParamError",
      "from lib.safe_string import safe_clave",
      "",
      "from ...core.${2:plural}.models import ${3:Clase}",
      "",
      "",
      "def get_${2:plural}(",
      "\tdatabase: Session,",
      "\tfiltro_boleano: bool = None,",
      ") -> Any:",
      "\t\"\"\" Consultar los ${4:plural} activos \"\"\"",
      "\tconsulta = database.query(${3:Clase})",
      "\tif filtro_boleano is not None:",
      "\t\tconsulta = consulta.filter_by(filtro_boleano=filtro_boleano)",
      "\treturn consulta.filter_by(estatus=\"A\").order_by(${3:Clase}.id)",
      "",
      "",
      "def get_${5:singular}(database: Session, ${5:singular}_id: int) -> ${3:Clase}:",
      "\t\"\"\" Consultar un ${6:singular} por su id \"\"\"",
      "\t${5:singular} = database.query(${3:Clase}).get(${5:singular}_id)",
      "\tif ${5:singular} is None:",
      "\t\traise MyNotExistsError(\"No existe ese ${6:singular}\")",
      "\tif ${5:singular}.estatus != \"A\":",
      "\t\traise MyIsDeletedError(\"No es activo ese ${6:singular}, está eliminado\")",
      "\treturn ${5:singular}",
      "",
      "",
      "def get_${5:singular}_with_clave(database: Session, ${5:singular}_clave: str) -> ${3:Clase}:",
      "\t\"\"\" Consultar un ${6:singular} por su clave \"\"\"",
      "\ttry:",
      "\t\tclave = safe_clave(${5:singular}_clave)",
      "\texcept ValueError as error:",
      "\t\traise MyNotValidParamError(str(error)) from error",
      "\t${5:singular} = database.query(${3:Clase}).filter_by(clave=clave).first()",
      "\tif ${5:singular} is None:",
      "\t\traise MyNotExistsError(\"No existe ese ${6:singular}\")",
      "\tif ${5:singular}.estatus != \"A\":",
      "\t\traise MyIsDeletedError(\"No es activo ese ${6:singular}, está eliminado\")",
      "\treturn ${5:singular}",
      ""
    ],
    "description": "Contenido para crud.py con id y clave"
  },
  "FastAPI CRUD create": {
    "scope": "python",
    "prefix": "fcrudcreate",
    "body": [
      "def create_${1:singular}(database: Session, ${1:singular}: ${2:Clase}) -> ${2:Clase}:",
      "\t\"\"\"Crear una ${3:descripcion}\"\"\"",
      "\tdatabase.add(${1:singular})",
      "\tdatabase.commit()",
      "\tdatabase.refresh(${1:singular})",
      "\treturn ${1:singular}"
    ],
    "description": "def create_item"
  },
  "FastAPI CRUD create unico": {
    "scope": "python",
    "prefix": "fcrudcreateunico",
    "body": [
      "def create_${1:singular}(database: Session, ${1:singular}: ${2:Clase}) -> ${2:Clase}:",
      "\t\"\"\"Crear una ${3:descripcion}\"\"\"",
      "\ttry:",
      "\t\tget_${1:singular}_with_${4:unico}(database, ${1:singular}.${4:unico})",
      "\texcept MyNotExistsError:",
      "\t\tdatabase.add(${1:singular})",
      "\t\tdatabase.commit()",
      "\t\tdatabase.refresh(${1:singular})",
      "\t\treturn ${1:singular}",
      "\traise MyAlreadyExistsError(\"Ya existe ese ${3:descripcion}\")"
    ],
    "description": "def create_item unico"
  },
  "FastAPI CRUD update": {
    "scope": "python",
    "prefix": "fcrudupdate",
    "body": [
      "def update_${1:singular}(database: Session, ${2:singular_id}: int, ${3:singular_in}: ${4:Clase}) -> ${4:Clase}:",
      "\t\"\"\"Actualizar una ${5:descripcion}\"\"\"",
      "\t${1:singular} = get_${1:singular}(database, ${2:singular_id})",
      "\t${1:singular}.columna = ${3:singular_in}.columna",
      "\t${1:singular}.columna = ${3:singular_in}.columna",
      "\tdatabase.commit()",
      "\treturn ${1:singular}"
    ],
    "description": "def update_item"
  },
  "FastAPI CRUD delete": {
    "scope": "python",
    "prefix": "fcruddelete",
    "body": [
      "def delete_${1:singular}(database: Session, ${2:singular_id}: int) -> ${3:Clase}:",
      "\t\"\"\"Eliminar una ${4:descripcion}\"\"\"",
      "\t${1:singular} = get_${1:singular}(database, ${2:singular_id})",
      "\t${1:singular}.estatus = \"B\"",
      "\tdatabase.commit()",
      "\treturn ${1:singular}"
    ],
    "description": "def delete_item"
  }
}
